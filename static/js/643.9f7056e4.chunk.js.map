{"version":3,"file":"static/js/643.9f7056e4.chunk.js","mappings":"yRAgBMA,GAAaC,EAAAA,EAAAA,GAAU,IAGhBC,EACT,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MACZ,OACI,kBAAMC,SAAUF,EAAhB,WACI,0BACI,SAAC,IAAD,CAAOG,KAAK,QAAQC,YAAY,QAAQC,KAAM,QACvCC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,EAAUZ,QAEhC,0BACI,SAAC,IAAD,CAAOM,KAAK,WAAWC,YAAY,WAAWC,KAAM,WAC7CC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,EAAUZ,QAEhC,4BACI,SAAC,IAAD,CAAOM,KAAK,aAAaG,UAAU,QAAQD,KAAM,aADrD,iBAKCJ,IAAS,gBAAKS,UAAWC,EAAAA,EAAAA,aAAhB,SAAiCV,KAE3C,0BACI,4CAOPW,GAAiBC,EAAAA,EAAAA,GAAwB,CAACC,KAAM,SAA/BD,CAAyCd,GAmCvE,WAAegB,EAAAA,EAAAA,KAHS,SAACC,GAAD,MACnB,CAACC,OAAQD,EAAME,KAAKD,UAEe,CAACE,YAAAA,EAAAA,IAAzC,EAhCmC,SAAC,GAA2B,IAA1BF,EAAyB,EAAzBA,OAAQE,EAAiB,EAAjBA,YASzC,OACIF,GACM,SAAC,KAAD,CAAUG,GAAG,WAAWC,SAAO,KAC/B,iCACE,0CACA,SAACT,EAAD,CAAgBV,SAVX,SAACoB,GACd,IAAKC,EAA+BD,EAA/BC,MAAOC,EAAwBF,EAAxBE,SAAUC,EAAcH,EAAdG,WACtBN,EAAYI,EAAOC,EAAUC","sources":["Components/Login/Login.tsx"],"sourcesContent":["import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {Textarea} from '../common/FormControls/FormControls';\r\nimport {maxLength, required} from '../../utils/validators/validator';\r\nimport {connect} from 'react-redux';\r\nimport {loginAuthTC} from '../../Redux/auth-reducer';\r\nimport {AppStateType} from '../../Redux/redux-store';\r\nimport {Navigate} from 'react-router-dom';\r\nimport s from '../common/FormControls/FormControls.module.css'\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst maxLength5 = maxLength(30)\r\n\r\n\r\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType>> =\r\n    ({handleSubmit, error}) => {\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Field name=\"email\" placeholder=\"email\" type={'input'}\r\n                           component={Textarea}\r\n                           validate={[required, maxLength5]}/>\r\n                </div>\r\n                <div>\r\n                    <Field name=\"password\" placeholder=\"password\" type={'password'}\r\n                           component={Textarea}\r\n                           validate={[required, maxLength5]}/>\r\n                </div>\r\n                <div>\r\n                    <Field name=\"rememberMe\" component=\"input\" type={'checkbox'}/>remember\r\n                    me\r\n                </div>\r\n\r\n                {error && <div className={s.errorMessage}>{error}</div>}\r\n\r\n                <div>\r\n                    <button>login</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n\r\nexport const LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\n\r\nconst Login: React.FC<LoginType> = ({isAuth, loginAuthTC}) => {\r\n    // const dispatch = useDispatch()\r\n    // const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth)\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        let {email, password, rememberMe} = formData\r\n        loginAuthTC(email, password, rememberMe)\r\n    }\r\n\r\n    return (\r\n        isAuth\r\n            ? <Navigate to=\"/profile\" replace/>\r\n            : <>\r\n                <h1>LOGIN PLEASE</h1>\r\n                <LoginReduxForm onSubmit={onSubmit}/>\r\n            </>\r\n    )\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    loginAuthTC: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\ntype LoginType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType =>\r\n    ({isAuth: state.auth.isAuth})\r\n\r\nexport default connect(mapStateToProps, {loginAuthTC})(Login)\r\n"],"names":["maxLength5","maxLength","LoginForm","handleSubmit","error","onSubmit","name","placeholder","type","component","Textarea","validate","required","className","s","LoginReduxForm","reduxForm","form","connect","state","isAuth","auth","loginAuthTC","to","replace","formData","email","password","rememberMe"],"sourceRoot":""}