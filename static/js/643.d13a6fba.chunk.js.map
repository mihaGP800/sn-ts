{"version":3,"file":"static/js/643.d13a6fba.chunk.js","mappings":"yRAqBMA,GAAaC,EAAAA,EAAAA,GAAU,IAGhBC,EACT,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WACnB,OACI,kBAAMC,SAAUH,EAAhB,WACI,0BACI,SAAC,IAAD,CAAOI,KAAK,QACLC,YAAY,QACZC,KAAM,QACNC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,EAAUb,QAEhC,0BACI,SAAC,IAAD,CAAOO,KAAK,WACLC,YAAY,WACZC,KAAM,WACNC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,EAAUb,QAEhC,4BACI,SAAC,IAAD,CAAOO,KAAK,aACLG,UAAU,QACVD,KAAM,aAHjB,iBAKCJ,IAAc,4BACX,gBAAKS,IAAKT,EAAYU,IAAI,MAC1B,SAAC,IAAD,CAAOR,KAAK,UACLC,YAAY,UACZC,KAAM,OACNC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,EAAUb,QAG/BI,IAAS,gBAAKY,UAAWC,EAAAA,EAAAA,aAAhB,SAAiCb,KAC3C,0BACI,4CAOPc,GAAiBC,EAAAA,EAAAA,GAAuC,CAACC,KAAM,SAA9CD,CAAwDjB,GAoCtF,WAAemB,EAAAA,EAAAA,KANS,SAACC,GAAD,MACnB,CACGC,OAAQD,EAAME,KAAKD,OACnBlB,WAAYiB,EAAME,KAAKnB,cAGS,CAACoB,YAAAA,EAAAA,IAAzC,EAjCmC,SAAC,GAAuC,IAAtCF,EAAqC,EAArCA,OAAQE,EAA6B,EAA7BA,YAAapB,EAAgB,EAAhBA,WAMtD,OACIkB,GACM,SAAC,KAAD,CAAUG,GAAG,WAAWC,SAAO,KAC/B,iCACE,0CACA,SAACT,EAAD,CAAgBZ,SATX,SAACsB,GACd,IAAKC,EAAwCD,EAAxCC,MAAOC,EAAiCF,EAAjCE,SAAUC,EAAuBH,EAAvBG,WAAYC,EAAWJ,EAAXI,QAClCP,EAAYI,EAAOC,EAAUC,EAAYC,IAOG3B,WAAYA","sources":["Components/Login/Login.tsx"],"sourcesContent":["import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {Textarea} from '../common/FormControls/FormControls';\r\nimport {maxLength, required} from '../../helpers/validation/validator';\r\nimport {connect} from 'react-redux';\r\nimport {loginAuthTC} from '../../Redux/auth-reducer';\r\nimport {AppStateType} from '../../Redux/redux-store';\r\nimport {Navigate} from 'react-router-dom';\r\nimport s from '../common/FormControls/FormControls.module.css'\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\ntype LoginFormType = {\r\n    captchaUrl: string | null,\r\n}\r\n\r\nconst maxLength5 = maxLength(30)\r\n\r\n\r\nexport const LoginForm: React.FC<LoginFormType & InjectedFormProps<FormDataType, LoginFormType>> =\r\n    ({handleSubmit, error, captchaUrl}) => {\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Field name=\"email\"\r\n                           placeholder=\"email\"\r\n                           type={'input'}\r\n                           component={Textarea}\r\n                           validate={[required, maxLength5]}/>\r\n                </div>\r\n                <div>\r\n                    <Field name=\"password\"\r\n                           placeholder=\"password\"\r\n                           type={'password'}\r\n                           component={Textarea}\r\n                           validate={[required, maxLength5]}/>\r\n                </div>\r\n                <div>\r\n                    <Field name=\"rememberMe\"\r\n                           component=\"input\"\r\n                           type={'checkbox'}/>remember me\r\n                </div>\r\n                {captchaUrl && <div>\r\n                    <img src={captchaUrl} alt=\"\"/>\r\n                    <Field name=\"captcha\"\r\n                           placeholder=\"captcha\"\r\n                           type={'text'}\r\n                           component={Textarea}\r\n                           validate={[required, maxLength5]}/>\r\n                </div>}\r\n\r\n                {error && <div className={s.errorMessage}>{error}</div>}\r\n                <div>\r\n                    <button>login</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n\r\nexport const LoginReduxForm = reduxForm<FormDataType, LoginFormType>({form: 'login'})(LoginForm)\r\n\r\n\r\nconst Login: React.FC<LoginType> = ({isAuth, loginAuthTC, captchaUrl}) => {\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        let {email, password, rememberMe, captcha} = formData\r\n        loginAuthTC(email, password, rememberMe, captcha)\r\n    }\r\n    return (\r\n        isAuth\r\n            ? <Navigate to=\"/profile\" replace/>\r\n            : <>\r\n                <h1>LOGIN PLEASE</h1>\r\n                <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n            </>\r\n    )\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    captchaUrl: string | null,\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    loginAuthTC: (email: string, password: string, rememberMe: boolean, captcha: string) => void\r\n}\r\n\r\ntype LoginType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType =>\r\n    ({\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl,\r\n    })\r\n\r\nexport default connect(mapStateToProps, {loginAuthTC})(Login)\r\n"],"names":["maxLength5","maxLength","LoginForm","handleSubmit","error","captchaUrl","onSubmit","name","placeholder","type","component","Textarea","validate","required","src","alt","className","s","LoginReduxForm","reduxForm","form","connect","state","isAuth","auth","loginAuthTC","to","replace","formData","email","password","rememberMe","captcha"],"sourceRoot":""}